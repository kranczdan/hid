{"version":3,"sources":["./src/service/model/insurance.model.ts","./src/environments/environment.ts","./src/app/insurance-detail/contact-form/contact-form.component.ts","./src/app/insurance-detail/contact-form/contact-form.component.html","./src/service/insurance.service.ts","./src/app/insurance-comparision/insurance-comparision.component.ts","./src/app/insurance-comparision/insurance-comparision.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/insurance-table/insurance-table-filter/insurance-table-filter.component.ts","./src/app/insurance-table/insurance-table-filter/insurance-table-filter.component.html","./src/app/insurance-table/insurance-table.component.ts","./src/app/insurance-table/insurance-table.component.html","./src/app/app.module.ts","./src/app/insurance-detail/insurance-detail.component.ts","./src/app/insurance-detail/insurance-detail.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["enum InsuranceType {\n    PARTIALLY_COMPREHENSIVE = \"TK\",\n    FULLY_COMPREHENSIVE = \"VK\"\n}\n\ninterface Insurance {\n    id: number,\n    title: string,\n    type: InsuranceType,\n    features: string[],\n    pricePerMonth: number\n}\n\nexport { Insurance, InsuranceType}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact-form',\n  templateUrl: './contact-form.component.html',\n  styleUrls: ['./contact-form.component.css']\n})\nexport class ContactFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact-form works!</p>\n","import { Injectable } from '@angular/core';\nimport { Insurance, InsuranceType } from './model/insurance.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class InsuranceService {\n  private insurances!: Insurance[];\n\n  constructor() {\n    this.init();\n  }\n\n  private init(): void {\n    this.insurances = [\n      {\n        id: 1,\n        title: 'Versicherung A',\n        type: InsuranceType.FULLY_COMPREHENSIVE,\n        features: [\"24/7 Verfügbarkeit\", \"25 Jahre Erfahrung\"],\n        pricePerMonth: 100\n      },\n      {\n        id: 2,\n        title: 'Versicherung B',\n        type: InsuranceType.FULLY_COMPREHENSIVE,\n        features: [\"keine Vor-Ort-Beratung\", \"Neukundenboni\"],\n        pricePerMonth: 98\n      },\n      {\n        id: 3,\n        title: 'Versicherung C',\n        type: InsuranceType.PARTIALLY_COMPREHENSIVE,\n        features: [\"professionelle Beratung\", \"virtuelle Einzelgespräche\"],\n        pricePerMonth: 89\n      }\n    ]\n  }\n\n  public getInsurances(): Insurance[] {\n    return this.insurances;\n  }\n};","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-insurance-comparision',\n  templateUrl: './insurance-comparision.component.html',\n  styleUrls: ['./insurance-comparision.component.css']\n})\nexport class InsuranceComparisionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>insurance-comparision works!</p>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'hid-prototype';\n}\n","<mat-toolbar  color=\"primary\">\n  <span>Versicherungportal</span>\n</mat-toolbar>\n<router-outlet>\n\n</router-outlet>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-insurance-table-filter',\n  templateUrl: './insurance-table-filter.component.html',\n  styleUrls: ['./insurance-table-filter.component.css']\n})\nexport class InsuranceTableFilterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-expansion-panel>\n    <mat-expansion-panel-header>\n      <mat-panel-title>\n        Filter\n      </mat-panel-title>\n    </mat-expansion-panel-header>\n    <p>This is the primary content of the panel.</p>\n  </mat-expansion-panel>","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatTableDataSource } from '@angular/material/table';\nimport {MatPaginator} from '@angular/material/paginator';\nimport { InsuranceService } from 'src/service/insurance.service';\nimport { Insurance } from 'src/service/model/insurance.model';\n\n@Component({\n  selector: 'app-insurance-table',\n  templateUrl: './insurance-table.component.html',\n  styleUrls: ['./insurance-table.component.css']\n})\nexport class InsuranceTableComponent implements OnInit, AfterViewInit {\n  public displayedColumns: string[] = ['select', 'name', 'type', 'features', 'price'];\n  public dataSource!: MatTableDataSource<Insurance>;\n  public insurances!: Insurance[];\n  public selection!: SelectionModel<Insurance>;\n  public disableComparison: boolean = true;\n\n  @ViewChild(MatPaginator) paginator!: MatPaginator;\n\n  \n  constructor(private insuranceService: InsuranceService) {\n\n  }\n\n  ngOnInit(): void {\n    this.insurances = this.insuranceService.getInsurances();\n    this.selection = new SelectionModel<Insurance>(true, []);\n    this.dataSource = new MatTableDataSource<Insurance>(this.insurances);\n  }\n\n  ngAfterViewInit() {\n    this.dataSource.paginator = this.paginator;\n  }\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    if (this.isAllSelected()) {\n      this.selection.clear();\n      return;\n    }\n    this.selection.select(...this.dataSource.data);\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?: Insurance): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.id + 1}`;\n  }\n\n  toggleRow(row: any) {\n    this.disableComparison = this.selection.selected.length === 0;\n    this.selection.toggle(row) ;\n  }\n}\n\n","<app-insurance-table-filter>\n\n</app-insurance-table-filter>\n\n<div class=\"header\">\n  <h3>Versicherungen <span *ngIf=\"this.insurances\">({{this.insurances.length}})</span></h3>\n  <button mat-button color=\"accent\" [disabled]=\"!selection.hasValue()\">Auswahl vergleichen</button>\n</div>\n\n<div class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n    <!-- Checkbox Column -->\n    <ng-container matColumnDef=\"select\">\n      <th mat-header-cell *matHeaderCellDef>\n        <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\"\n          [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [aria-label]=\"checkboxLabel()\">\n        </mat-checkbox>\n      </th>\n      <td mat-cell *matCellDef=\"let row\">\n        <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n          [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\n        </mat-checkbox>\n      </td>\n    </ng-container>\n\n    <!-- Name Column -->\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef> Name </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.title}} </td>\n    </ng-container>\n\n    <!-- Type Column -->\n    <ng-container matColumnDef=\"type\">\n      <th mat-header-cell *matHeaderCellDef> Typ </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.type}} </td>\n    </ng-container>\n\n    <!-- Features Column -->\n    <ng-container matColumnDef=\"features\">\n      <th mat-header-cell *matHeaderCellDef> Eigenschaften </th>\n      <td mat-cell *matCellDef=\"let element\">\n        <ul>\n          <li *ngFor=\"let feature of element.features\">{{feature}}</li>\n        </ul>\n      </td>\n    </ng-container>\n\n    <!-- Price Column -->\n    <ng-container matColumnDef=\"price\">\n      <th mat-header-cell *matHeaderCellDef> Price </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.pricePerMonth.toFixed(2)}}€ / Monat </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" > <!-- (click)=\"selection.toggle(row)\"> -->\n    </tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons aria-label=\"Select page of periodic elements\">\n  </mat-paginator>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\nimport { InsuranceTableComponent } from './insurance-table/insurance-table.component';\nimport { InsuranceDetailComponent } from './insurance-detail/insurance-detail.component';\nimport { InsuranceTableFilterComponent } from './insurance-table/insurance-table-filter/insurance-table-filter.component';\nimport { InsuranceComparisionComponent } from './insurance-comparision/insurance-comparision.component';\nimport { ContactFormComponent } from './insurance-detail/contact-form/contact-form.component'\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'insurance/table', pathMatch: 'full' },\n  { path: 'insurance/table', component: InsuranceTableComponent },\n  { path: 'insurance/detail', component: InsuranceDetailComponent },\n  { path: 'insurance/compare', component: InsuranceComparisionComponent }\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    InsuranceTableComponent,\n    InsuranceDetailComponent,\n    InsuranceTableFilterComponent,\n    InsuranceComparisionComponent,\n    ContactFormComponent\n  ],\n  imports: [\n    RouterModule.forRoot(routes),\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatTableModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatCheckboxModule,\n    MatGridListModule,\n    MatPaginatorModule\n  ],\n  exports: [RouterModule],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-insurance-detail',\n  templateUrl: './insurance-detail.component.html',\n  styleUrls: ['./insurance-detail.component.css']\n})\nexport class InsuranceDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>insurance-detail works!</p>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}